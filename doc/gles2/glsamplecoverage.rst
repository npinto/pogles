:func:`~pogles.gles2.glSampleCoverage`
======================================

.. function:: pogles.gles2.glSampleCoverage(value, invert)

    Specify multisample coverage parameters.

    :param value: is the single floating-point sample coverage value.  The
            value is clamped to the range :math:`[0,1]`.  The initial value is
            1.0.
    :type value: float
    :param invert: is set if the coverage masks should be inverted.  The
            initial value is ``False``.
    :type invert: bool


Description
-----------

Multisampling samples a pixel multiple times at various
implementation-dependent subpixel locations to generate antialiasing effects.
Multisampling transparently antialiases points, lines, and polygons if it is
enabled.

*value* is used in constructing a temporary mask used in determining which
samples will be used in resolving the final fragment color.  This mask is
bitwise-anded with the coverage mask generated from the multisampling
computation.  If the *invert* flag is set, the temporary mask is inverted (all
bits flipped) and then the bitwise-and is computed.

If an implementation does not have any multisample buffers available, or
multisampling is disabled, rasterization occurs with only a single sample
computing a pixel's final RGB color.

Provided an implementation supports multisample buffers, and multisampling is
enabled, then a pixel's final color is generated by combining several samples
per pixel.  Each sample contains color, depth, and stencil information,
allowing those operations to be performed on each sample.
